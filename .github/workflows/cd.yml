name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      KEY_FILE: ec2_key.pem
      ZIP_FILE: app.zip
      TARGET_FOLDER: ./fast-api-book-project

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: echo "${{ secrets.EC2_KEY }}" > ${{ env.KEY_FILE }}
        env:
          KEY_FILE: ${{ runner.temp }}/${{ env.KEY_FILE }}

      - name: Set permissions for SSH key
        run: chmod 400 ${{ env.KEY_FILE }}
        env:
          KEY_FILE: ${{ runner.temp }}/ec2_key.pem

      - name: Create deployment package
        run: zip -r ${{ env.ZIP_FILE }} .

      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}

      - name: Copy deployment package to server
        run: |
          scp -i ${{ env.KEY_FILE }} ${{ env.ZIP_FILE }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ env.TARGET_FOLDER }}
        env:
          KEY_FILE: ${{ runner.temp }}/ec2_key.pem
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          TARGET_FOLDER: ${{ env.TARGET_FOLDER }}

      - name: Deploy to server
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=120 -t -i ${{ env.KEY_FILE }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "Deploying to server at ${{ env.TARGET_FOLDER }}"

            cd ${{ env.TARGET_FOLDER }}

            # Kill existing uvicorn process if running
            pkill -f "uvicorn main:app" || true

            # Unzip the deployment package
            unzip -o ${{env.ZIP_FILE}}

            python -m venv venv
            
            source venv/bin/activate  
            
            python -m pip install --upgrade pip
            pip install -r requirements.txt

            # Start uvicorn in the background
            tmux new-session -d -s uvicorn_session 'nohup uvicorn main:app --host 0.0.0.0 --port 8000'

            rm ${{env.ZIP_FILE}}
          EOF
        env:
          KEY_FILE: ${{ runner.temp }}/${{ env.KEY_FILE }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          TARGET_FOLDER: ${{ env.TARGET_FOLDER }}
        timeout-minutes: 10
